!function(e){var t={};function n(i){if(t[i])return t[i].exports;var o=t[i]={i:i,l:!1,exports:{}};return e[i].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=e,n.c=t,n.d=function(e,t,i){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:i})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var i=Object.create(null);if(n.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)n.d(i,o,function(t){return e[t]}.bind(null,o));return i},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=1)}([,function(e,t,n){var i,o,r,d,l,s=ga(1024,768,function(){function e(e,t,n){let i=s.sprite({image:"tileset.png",x:160,y:0,width:32,height:32});return i.spawnX=e,i.spawnY=t,i.x=i.spawnX,i.y=i.spawnY,i.id=n,i.movement={falling:!1,moving:!1,stuck:!1,stuckAt:void 0,direction:directions.still},currentTile=void 0,i.dead=!1,i.inHole=void 0,i.needsPath=!0,i.pathData={path:null,updated:null,distance:null},i}s.canvas.style.border="none",s.backgroundColor="black",world=s.makeTiledWorld("world.json","tileset.png"),d=s.group(),exits=world.getObjects(s.tileTypes.door),floors=world.getObjects(s.tileTypes.floor),ladders=world.getObjects(s.tileTypes.ladder),batteries=world.getObjects(s.tileTypes.battery),exits.forEach(e=>{d.addChild(e),e.canUse=!1,e.alpha=.25,exitHash[e.index]=e}),floors.forEach(e=>{d.addChild(e)}),batteries.forEach(e=>{d.addChild(e),batteryHash[e.index]=e}),totalBatteries=Object.keys(batteryHash).length,ladders.forEach(e=>{d.addChild(e)}),directions={up:"u",down:"d",left:"l",right:"r",still:"still"},(i=s.sprite({image:"tileset.png",x:128,y:0,width:32,height:32})).spawnX=224,i.spawnY=704,i.x=i.spawnX,i.y=i.spawnY,i.movement={falling:!1,moving:!1,direction:directions.still},d.addChild(i),o.push(e(608,704,1)),o.push(e(576,544,2)),o.forEach(e=>{d.addChild(e)}),levelGraph=function(){const e={};objects=world.objects;let t=1;for(objects.length;t<objects.length;t++){let n=objects[t];n.name!==s.tileTypes.floor&&(e[n.index]={},adjTiles=s.getAdjacentTiles(n.index),m(i,adjTiles,directions.up)&&(e[n.index][adjTiles.u.index]=1),m(i,adjTiles,directions.down)&&(e[n.index][adjTiles.d.index]=1),m(i,adjTiles,directions.left)&&(e[n.index][adjTiles.l.index]=1),m(i,adjTiles,directions.right)&&(e[n.index][adjTiles.r.index]=1))}return e}();const t=(e,t)=>Object.keys(e).reduce((n,i)=>((null===n||e[i]<e[n])&&(t.includes(i)||(n=i)),n),null);dijkstra=((e,n)=>{if(e===n)return{distance:0,path:[e,n]};graph=levelGraph,graph.start=graph[e];const i=Object.assign({},graph.start);i[n]=Infinity,graph.start[n]&&(i[n]=1);const o={finish:null};for(let e in graph.start)o[e]="start";const r=[];let d=t(i,r);for(;d;){let e=i[d],n=graph[d];for(let t in n){let r=e+n[t];i[t]||(i[t]=r,o[t]=d),i[t]>r&&(i[t]=r,o[t]=d)}r.push(d),d=t(i,r)}let l=[n],s=o[n];for(;s;)"start"!==s?l.push(Number(s)):l.push(s),s=o[s];l.reverse(),l[0]=e;const a={distance:i[n],path:l,updated:Date.now()};return a}),(r=s.text("Game Over!","64px Futura","black",20,20)).x=120,r.y=s.canvas.height/2-64,(l=s.group(r)).visible=!1,s.key.rightArrow.press=function(){i.movement.direction=directions.right},s.key.leftArrow.press=function(){i.movement.direction=directions.left},s.key.upArrow.press=function(){i.movement.direction=directions.up},s.key.downArrow.press=function(){i.movement.direction=directions.down},s.key.a.press=function(){c("dl")},s.key.d.press=function(){c("dr")},s.key.rightArrow.release=function(){i.movement.direction===directions.right&&(i.movement.direction=directions.still)},s.key.leftArrow.release=function(){i.movement.direction===directions.left&&(i.movement.direction=directions.still)},s.key.upArrow.release=function(){i.movement.direction===directions.up&&(i.movement.direction=directions.still)},s.key.downArrow.release=function(){i.movement.direction===directions.down&&(i.movement.direction=directions.still)},s.state=g},["world.json","tileset.png"]),a={playerMoveSpeed:150,enemyMoveSpeed:250,blockRespawnSpeed:2e3,pathUpdateFrequency:2e3,enemyUnstuckSpeed:void 0};function c(e){if(currentTile=s.getSpriteIndex(i),tileToDestroy=s.getAdjacentTile(currentTile,e),spriteToDestroy=floors.find(e=>e.index===tileToDestroy.index),spriteToDestroy&&spriteToDestroy.visible){world.children[0].data[tileToDestroy.index]=1,s.fadeOut(spriteToDestroy,15);let e={sprite:spriteToDestroy,tile:tileToDestroy,time:Date.now()};blockHash[tileToDestroy.index]=e,destroyedBlockQueue.push(tileToDestroy.index)}}function u(e){holesWithEnemies.splice(holesWithEnemies.indexOf(e),1),-1!==destroyedBlockQueue.indexOf(e)&&(world.children[0].data[e]=1)}function p(){let e=destroyedBlockQueue[0];destroyedBlockQueue.shift(),blockObj=blockHash[e],s.fadeIn(blockObj.sprite,6).onComplete=function(){var t;-1!==holesWithEnemies.indexOf(e)&&o.forEach(n=>{n.inHole===e&&(n.dead=!0,u(e),(t=n).needsPath=!0,t.x=t.spawnX,t.y=t.spawnY,t.inHole=void 0,t.movement={falling:!1,moving:!1,stuck:!1,stuckAt:void 0,direction:directions.still},setTimeout(function(){t.dead=!1},1e3))})},world.children[0].data[blockObj.tile.index]=2}function m(e,t,n){switch(n){case directions.up:if(t.u.type&&t.c.type===s.tileTypes.ladder&&t.u.type!==s.tileTypes.floor)return!0;break;case directions.down:if(t.d.type&&t.c.type===s.tileTypes.ladder&&t.d.type!==s.tileTypes.floor||t.d.type&&t.d.type===s.tileTypes.ladder||t.d.type&&e.movement.falling)return!0;break;case directions.right:if(t.r.type&&t.r.type!==s.tileTypes.floor)return!0;break;case directions.left:if(t.l.type&&t.l.type!==s.tileTypes.floor)return!0;break;default:return!1}}function f(e,t,n){let i=s.getAdjacentTiles(t),o={didMove:!1,currentTile:t};return canMove=m(e,i,n),canMove?(currentCoords=s.getTile(t,world.objects[0].data,world),nextCoords=s.getTile(i[n].index,world.objects[0].data,world),nextX=nextCoords.x,nextY=nextCoords.y,e.x=nextX,e.y=nextY,h(e),o.didMove=!0,o.currentTile=i[n].index,o):o}function h(e){currentTile=s.getSpriteIndex(e),adjacentTiles=s.getAdjacentTiles(currentTile),adjacentTiles.c.type===s.tileTypes.ladder||adjacentTiles.d.isStable?e.movement.falling=!1:e.movement.falling=!0}function y(){i.movement.moving=!1}function v(e){enemyMovedResult={didMove:!1};let t=e.pathData.path[0],n=e.pathData.path[1];var i,o;return e.movement.stuck||(n||Infinity===e.pathData.distance||(e.needsPath=!0),h(e)),e.movement.falling||e.movement.stuck?e.movement.falling?(enemyMovedResult=f(e,t,directions.down),enemyMovedResult.didMove&&(e.movement.falling=!1,e.movement.stuck=!0,e.movement.stuckAt=Date.now())):e.movement.stuck&&a.enemyUnstuckSpeed<Date.now()-e.movement.stuckAt&&(e.movement.stuck=!1,e.movement.stuckAt=void 0,n||(n=Math.random()<.5?t+1:t-1),enemyMovedResult=(i=e,o=n,nextCoords=s.getTile(o,world.objects[0].data,world),nextX=nextCoords.x,nextY=nextCoords.y,i.x=nextX,i.y=nextY,!0),u(t),e.inHole=void 0,e.needsPath=!0):n<t?enemyMovedResult=f(e,t,n+1===t?directions.left:directions.up):n>t&&(enemyMovedResult=f(e,t,n-1===t?directions.right:directions.down)),enemyMovedResult.didMove&&e.pathData.path.shift(),enemyMovedResult.didMove}function g(){currentTile=s.getSpriteIndex(i),batteryHash[currentTile]&&batteryHash[currentTile].visible&&(batteryHash[currentTile].visible=!1,collectedBatteries++,totalBatteries===collectedBatteries&&exits.forEach(e=>{e.alpha=1,e.canUse=!0})),exitHash[currentTile]&&exitHash[currentTile].canUse&&(s.state=x,r.content="You won!");const e=function(e){let t={didMove:!1,currentTile:e};h(i),(i.movement.direction!==directions.still&&!i.movement.moving||i.movement.falling&&!i.movement.moving)&&(t=i.movement.falling?f(i,e,directions.down):f(i,e,i.movement.direction)).didMove&&(i.movement.moving=!0,s.wait(a.playerMoveSpeed,y));return t.currentTile}(currentTile);o.forEach(t=>{t.currentTile=s.getSpriteIndex(t),t.currentTile;let n=destroyedBlockQueue.indexOf(t.currentTile),i=holesWithEnemies.indexOf(t.currentTile);-1!==n&&-1===i&&(t.inHole=t.currentTile,blockIndex=destroyedBlockQueue[n],holesWithEnemies.push(blockIndex),world.children[0].data[blockIndex]=2),t.dead||(t.needsPath&&!t.movement.falling?(t.movement.stuck&&(t.currentTile-=32),t.pathData=dijkstra(t.currentTile,e),t.needsPath=!1):Date.now()-t.pathData.updated>a.pathUpdateFrequency&&(t.needsPath=!0),t.movement.moving||(enemyMoved=v(t),enemyMoved&&(t.movement.moving=!0,s.wait(a.enemyMoveSpeed,function(){t.movement.moving=!1}))))}),destroyedBlockQueue.length&&Date.now()-blockHash[destroyedBlockQueue[0]].time>a.blockRespawnSpeed&&p(),s.contain(i,s.stage.localBounds)}function x(){d.visible=!1,l.visible=!0}a.enemyUnstuckSpeed=a.blockRespawnSpeed/2,s.start(),destroyedBlockQueue=[],holesWithEnemies=[],blockHash={},batteryHash={},exitHash={},totalBatteries=0,collectedBatteries=0,o=[]}]);